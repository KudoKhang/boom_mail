{"ast":null,"code":"var _jsxFileName = \"/Users/NghiaKhang/Coding/Projects/boom_mail/src/pages/Home/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormData } from '../../hooks/useFormData';\nimport { addMailsApi } from '../../api';\nimport { localCache } from '../../utils/localStorage';\nimport { useAlert } from '../../contexts/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const {\n    formData,\n    onInputChange\n  } = useFormData();\n  const {\n    showError\n  } = useAlert();\n  const transformEmails = emails => {\n    return emails.trim().replace(/[ ]+/g, '').split(/\\n/);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localCache.getUserToken();\n      const {\n        number,\n        emails\n      } = formData;\n      await addMailsApi({\n        token,\n        n_spam: number\n      }, transformEmails(emails));\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showError((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || (error === null || error === void 0 ? void 0 : error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 8\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"input-emails\",\n                  label: \"Danh s\\xE1ch email\",\n                  multiline: true,\n                  minRows: 8,\n                  maxRows: 8,\n                  required: true,\n                  fullWidth: true,\n                  name: \"emails\",\n                  onChange: onInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"input-password\",\n                  label: \"S\\u1ED1 l\\u01B0\\u1EE3t\",\n                  required: true,\n                  fullWidth: true,\n                  name: \"number\",\n                  onChange: onInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              sx: {\n                my: 3\n              },\n              fullWidth: true,\n              children: \"B\\u1EAFt \\u0111\\u1EA7u\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"logs\",\n          label: \"K\\u1EBFt qu\\u1EA3\",\n          multiline: true,\n          minRows: 8,\n          maxRows: 8,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"YXZIKl8YsaIBuZEB1gdSVRdQ3SI=\", false, function () {\n  return [useFormData, useAlert];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Container","Grid","Box","TextField","Button","useFormData","addMailsApi","localCache","useAlert","Home","formData","onInputChange","showError","transformEmails","emails","trim","replace","split","handleSubmit","e","preventDefault","token","getUserToken","number","n_spam","error","response","data","message","mt","display","flexDirection","alignItems","my"],"sources":["/Users/NghiaKhang/Coding/Projects/boom_mail/src/pages/Home/index.jsx"],"sourcesContent":["import React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormData } from '../../hooks/useFormData';\nimport { addMailsApi } from '../../api';\nimport { localCache } from '../../utils/localStorage';\nimport { useAlert } from '../../contexts/alert';\n\nexport default function Home() {\n  const { formData, onInputChange } = useFormData();\n  const { showError } = useAlert();\n\n  const transformEmails = (emails) => {\n    return emails.trim().replace(/[ ]+/g, '').split(/\\n/);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localCache.getUserToken();\n      const { number, emails } = formData;\n      await addMailsApi({ token, n_spam: number }, transformEmails(emails));\n    } catch (error) {\n      showError(error?.response?.data?.message || error?.message);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 8 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"input-emails\"\n                    label=\"Danh sách email\"\n                    multiline\n                    minRows={8}\n                    maxRows={8}\n                    required\n                    fullWidth\n                    name=\"emails\"\n                    onChange={onInputChange}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"input-password\"\n                    label=\"Số lượt\"\n                    required\n                    fullWidth\n                    name=\"number\"\n                    onChange={onInputChange}\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" variant=\"contained\" sx={{ my: 3 }} fullWidth>\n                Bắt đầu\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField id=\"logs\" label=\"Kết quả\" multiline minRows={8} maxRows={8} fullWidth />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}