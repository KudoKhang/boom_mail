{"ast":null,"code":"var _jsxFileName = \"/Users/NghiaKhang/Coding/Projects/portal-login-react/src/App.js\";\nimport React, { Component } from 'react';\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Login from './pages/Login'; // import './App.css';\n\nimport axios from \"axios\"; // import { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\n// import loginImg from './login.png'\n// const FormItem = Form.Item;\n// class NormalLoginForm extends Component {\n//   isLoggedIn = () => {\n//     // window.loggedUsername should be defined by UI page / jelly script\n//     // if it's 'guest' that means there is no active user session\n//     if (window.loggedUsername==='guest') {\n//       return false;\n//     } else {\n//       return true; // set it to false for local development to prevent passing through\n//     }\n//   }\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         var details = {\n//           sysparm_type: \"login\",\n//           \"ni.nolog.user_password\": true,\n//           remember_me: values.remember,\n//           user_name: values.userName,\n//           user_password: values.password,\n//           get_redirect_url: true,\n//           sysparm_goto_url: \"navpage.do\"\n//         };\n//         var formBody = [];\n//         for (var property in details) {\n//           var encodedKey = encodeURIComponent(property);\n//           var encodedValue = encodeURIComponent(details[property]);\n//           formBody.push(encodedKey + \"=\" + encodedValue);\n//         }\n//         formBody = formBody.join(\"&\");\n//         axios({\n//           method: \"post\",\n//           url:\n//             \"angular.do?sysparm_type=view_form.login\",\n//           data: formBody,\n//           config: {\n//             headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n//           }\n//         })\n//           .then(function(response) {\n//             if (response.data.status==='error') {\n//               message.error(response.data.message)\n//             } else if (response.data.status==='success'){\n//               message.success(response.data.message)\n//               setTimeout(()=>{window.location = window.mainAppPage;},500);\n//             } else {\n//               message.warning('Unknown response status'+response.data.message)\n//             }\n//           })\n//           .catch(function(response) {\n//             message.error('Network error. Cannot log in.')\n//           });\n//       }\n//     });\n//   };\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     if (this.isLoggedIn()) {\n//       window.location = window.mainAppPage;\n//     }\n//     return (\n//       <div>\n//       <div className={this.isLoggedIn() ? ' ' : ' hidden'}>\n//         Successfully logged in...\n//       </div>\n//       <div className={\"lContainer\"+(this.isLoggedIn() ? ' hidden' : ' ')}>\n//       <div className=\"lItem\">\n//           <div className=\"loginImage\">\n//             <img src={loginImg} width=\"300\" style={{position: 'relative'}} alt=\"login\"/>\n//           </div>\n//           <div className=\"loginForm\">\n//             <h2>Login</h2>\n//               <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//               <FormItem>\n//                 {getFieldDecorator(\"userName\", {\n//                   rules: [{ required: true, message: \"Please enter your username\" }]\n//                 })(\n//                   <Input\n//                     prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n//                     placeholder=\"Username\"\n//                   />\n//                 )}\n//               </FormItem>\n//               <FormItem>\n//                 {getFieldDecorator(\"password\", {\n//                   rules: [{ required: true, message: \"Please enter your Password\" }]\n//                 })(\n//                   <Input\n//                     prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                   />\n//                 )}\n//               </FormItem>\n//               <FormItem>\n//                 {getFieldDecorator(\"remember\", {\n//                   valuePropName: \"checked\",\n//                   initialValue: true\n//                 })(<Checkbox>Remember me</Checkbox>)}\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   className=\"login-form-button\"\n//                 >\n//                   Log in\n//                 </Button>\n//               </FormItem>\n//             </Form>\n//           </div>\n//       </div>\n//       <div className=\"footer\">\n//         <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footerLink\">Powered by React</a>\n//       </div>\n//       </div>\n//       </div>\n//     );\n//   }\n// }\n// const Login = Form.create()(NormalLoginForm);\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Home\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/about\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"About\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Users\")))), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    element: React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/about\",\n    element: React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/NghiaKhang/Coding/Projects/portal-login-react/src/App.js"],"names":["React","Component","Routes","Route","Link","Home","Login","axios","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,MADF,EAEEC,KAFF,EAGEC,IAHF,QAIO,kBAJP;AAMA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,eAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAle;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPF,CADF,CADF,EAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,OAAO,EAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAhBF,CADF;AAwBD;;AAGD,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\n// import './App.css';\nimport axios from \"axios\";\n// import { Form, Icon, Input, Button, Checkbox, message } from \"antd\";\n// import loginImg from './login.png'\n// const FormItem = Form.Item;\n\n// class NormalLoginForm extends Component {\n  \n//   isLoggedIn = () => {\n//     // window.loggedUsername should be defined by UI page / jelly script\n//     // if it's 'guest' that means there is no active user session\n//     if (window.loggedUsername==='guest') {\n//       return false;\n//     } else {\n//       return true; // set it to false for local development to prevent passing through\n//     }\n//   }\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFields((err, values) => {\n//       if (!err) {\n//         var details = {\n//           sysparm_type: \"login\",\n//           \"ni.nolog.user_password\": true,\n//           remember_me: values.remember,\n//           user_name: values.userName,\n//           user_password: values.password,\n//           get_redirect_url: true,\n//           sysparm_goto_url: \"navpage.do\"\n//         };\n\n//         var formBody = [];\n//         for (var property in details) {\n//           var encodedKey = encodeURIComponent(property);\n//           var encodedValue = encodeURIComponent(details[property]);\n//           formBody.push(encodedKey + \"=\" + encodedValue);\n//         }\n//         formBody = formBody.join(\"&\");\n//         axios({\n//           method: \"post\",\n//           url:\n//             \"angular.do?sysparm_type=view_form.login\",\n//           data: formBody,\n//           config: {\n//             headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n//           }\n//         })\n//           .then(function(response) {\n//             if (response.data.status==='error') {\n//               message.error(response.data.message)\n//             } else if (response.data.status==='success'){\n//               message.success(response.data.message)\n//               setTimeout(()=>{window.location = window.mainAppPage;},500);\n//             } else {\n//               message.warning('Unknown response status'+response.data.message)\n//             }\n//           })\n//           .catch(function(response) {\n//             message.error('Network error. Cannot log in.')\n//           });\n//       }\n//     });\n//   };\n\n//   render() {\n//     const { getFieldDecorator } = this.props.form;\n//     if (this.isLoggedIn()) {\n//       window.location = window.mainAppPage;\n//     }\n//     return (\n//       <div>\n//       <div className={this.isLoggedIn() ? ' ' : ' hidden'}>\n//         Successfully logged in...\n//       </div>\n//       <div className={\"lContainer\"+(this.isLoggedIn() ? ' hidden' : ' ')}>\n//       <div className=\"lItem\">\n//           <div className=\"loginImage\">\n//             <img src={loginImg} width=\"300\" style={{position: 'relative'}} alt=\"login\"/>\n//           </div>\n//           <div className=\"loginForm\">\n//             <h2>Login</h2>\n//               <Form onSubmit={this.handleSubmit} className=\"login-form\">\n//               <FormItem>\n//                 {getFieldDecorator(\"userName\", {\n//                   rules: [{ required: true, message: \"Please enter your username\" }]\n//                 })(\n//                   <Input\n//                     prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n//                     placeholder=\"Username\"\n//                   />\n//                 )}\n//               </FormItem>\n//               <FormItem>\n//                 {getFieldDecorator(\"password\", {\n//                   rules: [{ required: true, message: \"Please enter your Password\" }]\n//                 })(\n//                   <Input\n//                     prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                   />\n//                 )}\n//               </FormItem>\n//               <FormItem>\n//                 {getFieldDecorator(\"remember\", {\n//                   valuePropName: \"checked\",\n//                   initialValue: true\n//                 })(<Checkbox>Remember me</Checkbox>)}\n//                 <Button\n//                   type=\"primary\"\n//                   htmlType=\"submit\"\n//                   className=\"login-form-button\"\n//                 >\n//                   Log in\n//                 </Button>\n//               </FormItem>\n//             </Form>\n//           </div>\n//       </div>\n//       <div className=\"footer\">\n//         <a href=\"\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"footerLink\">Powered by React</a>\n//       </div>\n//       </div>\n//       </div>\n//     );\n//   }\n// }\n\n// const Login = Form.create()(NormalLoginForm);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/users\">Users</Link>\n          </li>\n        </ul>\n      </nav>\n\n\n      <Routes>\n        <Route path=\"/\" element={ <Home/> } />\n        <Route path=\"/about\" element={ <Login/> } />\n        {/* <Route path=\"/users\" element={ <Users/> } /> */}\n      </Routes>\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}