{"ast":null,"code":"import _objectSpread from \"/Users/NghiaKhang/Coding/Projects/boom_mail/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { API_URL } from '../config/constants';\nimport { localCache } from './localStorage';\nvar axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    Accept: 'application/json'\n  }\n});\nvar addAuthToken = function addAuthToken(config) {\n  var url = config.url,\n    headers = config.headers;\n  var authToken;\n  if (/admin\\/*/.test(url)) {\n    authToken = localCache.getAdminToken();\n  } else {\n    authToken = localCache.getUserToken();\n  }\n  if (authToken) {\n    headers.Authorization = \"\".concat(authToken);\n  }\n  return _objectSpread({}, config, {\n    headers: headers\n  });\n};\nvar handleError = function handleError(error) {\n  return Promise.reject(error);\n};\naxiosInstance.interceptors.request.use(addAuthToken, handleError);\nexport default axiosInstance;","map":{"version":3,"names":["axios","API_URL","localCache","axiosInstance","create","baseURL","headers","Accept","addAuthToken","config","url","authToken","test","getAdminToken","getUserToken","Authorization","handleError","error","Promise","reject","interceptors","request","use"],"sources":["/Users/NghiaKhang/Coding/Projects/boom_mail/src/utils/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\nimport { API_URL } from '../config/constants';\nimport { localCache } from './localStorage';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    Accept: 'application/json',\n  },\n});\n\nconst addAuthToken = (config) => {\n  const { url, headers } = config;\n  let authToken;\n\n  if (/admin\\/*/.test(url)) {\n    authToken = localCache.getAdminToken();\n  } else {\n    authToken = localCache.getUserToken();\n  }\n\n  if (authToken) {\n    headers.Authorization = `${authToken}`;\n  }\n\n  return { ...config, headers };\n};\n\nconst handleError = (error) => {\n  return Promise.reject(error);\n};\n\naxiosInstance.interceptors.request.use(addAuthToken, handleError);\n\nexport default axiosInstance;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,IAAMC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;EACjCC,OAAO,EAAEJ,OAAO;EAChBK,OAAO,EAAE;IACPC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,MAAM,EAAK;EAAA,IACvBC,GAAG,GAAcD,MAAM,CAAvBC,GAAG;IAAEJ,OAAO,GAAKG,MAAM,CAAlBH,OAAO;EACpB,IAAIK,SAAS;EAEb,IAAI,UAAU,CAACC,IAAI,CAACF,GAAG,CAAC,EAAE;IACxBC,SAAS,GAAGT,UAAU,CAACW,aAAa,EAAE;EACxC,CAAC,MAAM;IACLF,SAAS,GAAGT,UAAU,CAACY,YAAY,EAAE;EACvC;EAEA,IAAIH,SAAS,EAAE;IACbL,OAAO,CAACS,aAAa,aAAMJ,SAAS,CAAE;EACxC;EAEA,yBAAYF,MAAM;IAAEH,OAAO,EAAPA;EAAO;AAC7B,CAAC;AAED,IAAMU,WAAW,GAAG,SAAdA,WAAW,CAAIC,KAAK,EAAK;EAC7B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC;AAEDd,aAAa,CAACiB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACd,YAAY,EAAEQ,WAAW,CAAC;AAEjE,eAAeb,aAAa"},"metadata":{},"sourceType":"module"}