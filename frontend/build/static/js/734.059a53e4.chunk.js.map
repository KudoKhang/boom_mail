{"version":3,"file":"static/js/734.059a53e4.chunk.js","mappings":"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","sources":["utils/axiosInstance.js","api/index.js","config/constants.js","hooks/useFormData.jsx","pages/Home/index.jsx","utils/localStorage.js"],"sourcesContent":["import axios from 'axios';\nimport { API_URL } from '../config/constants';\nimport { localCache } from './localStorage';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    Accept: 'application/json',\n  },\n});\n\nconst addAuthToken = (config) => {\n  const { url, headers } = config;\n  let authToken;\n\n  if (/admin\\/*/.test(url)) {\n    authToken = localCache.getAdminToken();\n  } else {\n    authToken = localCache.getUserToken();\n  }\n\n  if (authToken) {\n    headers.Authorization = `${authToken}`;\n  }\n\n  return { ...config, headers };\n};\n\nconst handleError = (error) => {\n  return Promise.reject(error);\n};\n\naxiosInstance.interceptors.request.use(addAuthToken, handleError);\n\nexport default axiosInstance;\n","import axiosIns from '../utils/axiosInstance';\nimport { localCache } from '../utils/localStorage';\n\nexport const SignupApi = async (params) => {\n  const { data } = await axiosIns.post('/signup', {}, { params });\n  return data;\n};\n\nexport const LoginApi = async (params) => {\n  const { data } = await axiosIns.post('/login', {}, { params });\n  return data;\n};\n\nexport const addMailsApi = async (params, data) => {\n  const { data: resData } = await axiosIns.post('/spam', data, { params });\n  return resData;\n};\n\nexport const getUser = async () => {\n  const token = localCache.getUserToken();\n  const { data } = await axiosIns.post('/user', {}, { params: { token } });\n  return data;\n};\n\nexport const logoutUser = async () => {\n  localCache.clearUser();\n  return {};\n};\n","export const URL = {\n  HOME: '/dashboard',\n  SIGNUP: '/signup',\n  LOGIN: '/login',\n  PRICING: '/pricing',\n  PAYMENT: '/payment',\n};\n\nexport const API_URL = 'http://15.235.184.92/api';\n","import { useState } from 'react';\n\nexport const useFormData = (defaultState = {}) => {\n  const [formData, setFormData] = useState(defaultState);\n\n  const onInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return {\n    formData,\n    onInputChange,\n  };\n};\n","import React from 'react';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormData } from '../../hooks/useFormData';\nimport { addMailsApi } from '../../api';\nimport { localCache } from '../../utils/localStorage';\nimport { useAlert } from '../../contexts/alert';\n\nexport default function Home() {\n  const { formData, onInputChange } = useFormData();\n  const { showError } = useAlert();\n\n  const transformEmails = (emails) => {\n    return emails.trim().replace(/[ ]+/g, '').split(/\\n/);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localCache.getUserToken();\n      const { number, emails } = formData;\n      await addMailsApi({ token, n_spam: number }, transformEmails(emails));\n    } catch (error) {\n      showError(error?.response?.data?.message || error?.message);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 8 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"input-emails\"\n                    label=\"Danh sách email\"\n                    multiline\n                    minRows={8}\n                    maxRows={8}\n                    required\n                    fullWidth\n                    name=\"emails\"\n                    onChange={onInputChange}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"input-password\"\n                    label=\"Số lượt\"\n                    required\n                    fullWidth\n                    name=\"number\"\n                    onChange={onInputChange}\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" variant=\"contained\" sx={{ my: 3 }} fullWidth>\n                Bắt đầu\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField id=\"logs\" label=\"Kết quả\" multiline minRows={8} maxRows={8} fullWidth />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","export const localCache = {\n  getState: (key) => {\n    const localKey = localStorage.getItem(key);\n    try {\n      return JSON.parse(localKey);\n    } catch {\n      // Not JSON\n      return localKey;\n    }\n  },\n  set: (key, value) => {\n    if (typeof value === 'object' || Array.isArray(value)) {\n      localStorage.setItem(key, JSON.stringify(value));\n      return;\n    }\n    localStorage.setItem(key, value);\n  },\n  remove: (key) => localStorage.removeItem(key),\n  clear: () => localStorage.clear(),\n  getAdminToken() {\n    return this.getState('admin_access_token');\n  },\n  getUserToken() {\n    return this.getState('user_access_token');\n  },\n  getUser() {\n    return this.getState('user');\n  },\n  getAdmin() {\n    return this.getState('admin');\n  },\n  setUserToken(val) {\n    this.set('user_access_token', val);\n  },\n  setUser(val) {\n    this.set('user', val);\n  },\n  clearUser() {\n    this.remove('user_access_token');\n    this.remove('user');\n  },\n};\n"],"names":["axiosInstance","axios","baseURL","API_URL","headers","Accept","interceptors","request","use","config","authToken","url","test","localCache","Authorization","error","Promise","reject","SignupApi","params","axiosIns","data","LoginApi","addMailsApi","resData","getUser","token","logoutUser","URL","HOME","SIGNUP","LOGIN","PRICING","PAYMENT","useFormData","defaultState","useState","formData","setFormData","onInputChange","e","target","name","value","Home","showError","useAlert","transformEmails","emails","trim","replace","split","handleSubmit","preventDefault","number","n_spam","response","message","maxWidth","sx","mt","container","spacing","item","xs","display","flexDirection","alignItems","component","onSubmit","id","label","multiline","minRows","maxRows","required","fullWidth","onChange","type","variant","my","getState","key","localKey","localStorage","getItem","JSON","parse","set","Array","isArray","setItem","stringify","remove","removeItem","clear","getAdminToken","this","getUserToken","getAdmin","setUserToken","val","setUser","clearUser"],"sourceRoot":""}